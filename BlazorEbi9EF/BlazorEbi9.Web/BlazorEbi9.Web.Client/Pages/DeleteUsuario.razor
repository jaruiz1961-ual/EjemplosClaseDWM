
@page "/DeleteUsuario/{Id:int}"    //esta página se puede acceder tambien en modo de edición
@rendermode InteractiveWebAssembly

@inject IUsuarioServiceAsync UsuarioService
@inject NavigationManager nav

<h3>Eliminar Usuario</h3>
<p styp="color:red;text-align:center">¿Estas seguro ?</p>

@*<EditForm Model="@usuarioSet" />*@
<table class="table">
    <tr>
        <td>Codigo:</td>
        <td><input class="form-control" col-sm-4 type="text" @bind="usuarioSet.Codigo" /> </td>
    </tr>
    <tr>
        <td>UserName:</td>
        <td><input class="form-control" col-sm-4 type="text" @bind="usuarioSet.UserName" /> </td>
    </tr>


    <tr>
        <td>NivelAcceso:</td>
        <td><input class="form-control" col-sm-4 type="text" @bind="usuarioSet.NivelAcceso" /> </td>
    </tr>

    <tr>
        <td>Password:</td>
        <td><input class="form-control" col-sm-4 type="text" @bind="usuarioSet.Password" /> </td>
    </tr>

    <tr>
        <td colspan="2" style="text-align:center">
            <input type="submit" value="Delete" @onclick="Delete" />
            <input type="button" value="Cancel" @onclick="Cancel" />

        </td>
    </tr>

</table>

@code {

    [Parameter]
    public int Id { get; set; }

    private UsuarioSet usuarioSet = new UsuarioSet();

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
            usuarioSet = await UsuarioService.FindIdAsync(Id);
    }

    protected async Task Delete()
    {
        await UsuarioService.DeleteIdAsync(Id);
        nav.NavigateTo("/ListaUsuarios");
    }

    protected void Cancel()
    {
        nav.NavigateTo("/ListaUsuarios");
    }
}
